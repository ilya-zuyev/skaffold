name: PR
on:
  pull_request:
    paths:
      - "**.go"
      - "**.yml"
      - "**.yaml"
      - "Makefile"
env:
  GOPROXY: https://proxy.golang.org


jobs:

  build_master:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.5'
          stable: true
      - name: checkout master
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Download Dependencies
        run: go mod download

      - name: Install GCloud
        run: |
          wget -O gcloud.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-276.0.0-linux-x86_64.tar.gz
          sudo tar -xvf gcloud.tar.gz -C /
          sudo CLOUDSDK_PYTHON="python2.7" /google-cloud-sdk/install.sh --usage-reporting=false --bash-completion=false --disable-installation-options
          echo "/google-cloud-sdk/bin" >> $GITHUB_PATH

      - name: Configure GCloud with Docker
        run: sudo gcloud auth configure-docker

      - name: Setup other files and permissions
        run: |
          sudo chown $(whoami) /home/$(whoami)/.config/gcloud -R
          sudo chmod g+rw /home/$(whoami)/.config/gcloud -R
          sudo chown $(whoami):docker /home/$(whoami)/.docker -R
          sudo chmod g+rw /home/$(whoami)/.docker -R
          echo '{}' > /home/$(whoami)/.docker/config.json
          mkdir -p /home/$(whoami)/.m2/ && cp ./hack/maven/settings.xml /home/$(whoami)/.m2/settings.xml

      - name: Install Minikube and start cluster
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.15.1/minikube-linux-amd64
          sudo install minikube /usr/local/bin/minikube
          minikube start --profile=minikube --driver=docker
      - name: Build and benchmark
        run: |
          git branch --show-current
          make benchmark
      - uses: actions/upload-artifact@v1
        name: Upload benchmark report
        with:
          name: skaffold_master
          path: out/

  build_branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.5'
          stable: true
      - name: checkout branch
        uses: actions/checkout@v2
      - name: Download Dependencies
        run: go mod download

      - name: Install GCloud
        run: |
          wget -O gcloud.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-276.0.0-linux-x86_64.tar.gz
          sudo tar -xvf gcloud.tar.gz -C /
          sudo CLOUDSDK_PYTHON="python2.7" /google-cloud-sdk/install.sh --usage-reporting=false --bash-completion=false --disable-installation-options
          echo "/google-cloud-sdk/bin" >> $GITHUB_PATH

      - name: Configure GCloud with Docker
        run: sudo gcloud auth configure-docker

      - name: Setup other files and permissions
        run: |
          sudo chown $(whoami) /home/$(whoami)/.config/gcloud -R
          sudo chmod g+rw /home/$(whoami)/.config/gcloud -R
          sudo chown $(whoami):docker /home/$(whoami)/.docker -R
          sudo chmod g+rw /home/$(whoami)/.docker -R
          echo '{}' > /home/$(whoami)/.docker/config.json
          mkdir -p /home/$(whoami)/.m2/ && cp ./hack/maven/settings.xml /home/$(whoami)/.m2/settings.xml

      - name: Install Minikube and start cluster
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.15.1/minikube-linux-amd64
          sudo install minikube /usr/local/bin/minikube
          minikube start --profile=minikube --driver=docker
      - name: Build and benchmark
        run: |
          git branch --show-current
          make benchmark
      - uses: actions/upload-artifact@v1
        with:
          name: skaffold_branch
          path: out/

  benchmark:
    needs: [build_branch, build_master]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.5'
          stable: true

      - uses: actions/download-artifact@v2
        with:
          name: skaffold_branch
          path: bench_master/

      - uses: actions/download-artifact@v2
        with:
          name: skaffold_branch
          path: bench_branch/

      - name: Compare benchmarks
        run: |
          go get -u golang.org/x/perf/cmd/benchstat
          benchstat -html -delta-test none bench_master/benchmark.result bench_branch/benchmark.result | sed -n '/<table /,/<\/table/p' > benchdelta.html

      - uses: actions/upload-artifact@v1
        with:
          name: benchdelta
          path: benchdelta.html

      - name: comment PR
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: benchdelta.html
